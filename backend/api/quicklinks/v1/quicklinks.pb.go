// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: quicklinks/v1/quicklinks.proto

package quicklinksv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/lyft/clutch/backend/api/api/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url       string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ImagePath string `protobuf:"bytes,3,opt,name=image_path,json=imagePath,proto3" json:"image_path,omitempty"` // Can be an s3 location, path on the server, etc.
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicklinks_v1_quicklinks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_quicklinks_v1_quicklinks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_quicklinks_v1_quicklinks_proto_rawDescGZIP(), []int{0}
}

func (x *Link) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Link) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Link) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

type LinkEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Links []*Link `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *LinkEntity) Reset() {
	*x = LinkEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicklinks_v1_quicklinks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkEntity) ProtoMessage() {}

func (x *LinkEntity) ProtoReflect() protoreflect.Message {
	mi := &file_quicklinks_v1_quicklinks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkEntity.ProtoReflect.Descriptor instead.
func (*LinkEntity) Descriptor() ([]byte, []int) {
	return file_quicklinks_v1_quicklinks_proto_rawDescGZIP(), []int{1}
}

func (x *LinkEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LinkEntity) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type SlackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamName    string `protobuf:"bytes,1,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	BotName     string `protobuf:"bytes,2,opt,name=bot_name,json=botName,proto3" json:"bot_name,omitempty"`
	ChannelName string `protobuf:"bytes,3,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
}

func (x *SlackInfo) Reset() {
	*x = SlackInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicklinks_v1_quicklinks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlackInfo) ProtoMessage() {}

func (x *SlackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_quicklinks_v1_quicklinks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlackInfo.ProtoReflect.Descriptor instead.
func (*SlackInfo) Descriptor() ([]byte, []int) {
	return file_quicklinks_v1_quicklinks_proto_rawDescGZIP(), []int{2}
}

func (x *SlackInfo) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *SlackInfo) GetBotName() string {
	if x != nil {
		return x.BotName
	}
	return ""
}

func (x *SlackInfo) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

type GetQuickLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName        string     `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	ProjectEnvironment string     `protobuf:"bytes,2,opt,name=project_environment,json=projectEnvironment,proto3" json:"project_environment,omitempty"`
	SlackInfo          *SlackInfo `protobuf:"bytes,3,opt,name=slack_info,json=slackInfo,proto3" json:"slack_info,omitempty"`
}

func (x *GetQuickLinksRequest) Reset() {
	*x = GetQuickLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicklinks_v1_quicklinks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuickLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuickLinksRequest) ProtoMessage() {}

func (x *GetQuickLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicklinks_v1_quicklinks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuickLinksRequest.ProtoReflect.Descriptor instead.
func (*GetQuickLinksRequest) Descriptor() ([]byte, []int) {
	return file_quicklinks_v1_quicklinks_proto_rawDescGZIP(), []int{3}
}

func (x *GetQuickLinksRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *GetQuickLinksRequest) GetProjectEnvironment() string {
	if x != nil {
		return x.ProjectEnvironment
	}
	return ""
}

func (x *GetQuickLinksRequest) GetSlackInfo() *SlackInfo {
	if x != nil {
		return x.SlackInfo
	}
	return nil
}

type GetQuickLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkEntities []*LinkEntity `protobuf:"bytes,1,rep,name=link_entities,json=linkEntities,proto3" json:"link_entities,omitempty"`
}

func (x *GetQuickLinksResponse) Reset() {
	*x = GetQuickLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicklinks_v1_quicklinks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuickLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuickLinksResponse) ProtoMessage() {}

func (x *GetQuickLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicklinks_v1_quicklinks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuickLinksResponse.ProtoReflect.Descriptor instead.
func (*GetQuickLinksResponse) Descriptor() ([]byte, []int) {
	return file_quicklinks_v1_quicklinks_proto_rawDescGZIP(), []int{4}
}

func (x *GetQuickLinksResponse) GetLinkEntities() []*LinkEntity {
	if x != nil {
		return x.LinkEntities
	}
	return nil
}

var File_quicklinks_v1_quicklinks_proto protoreflect.FileDescriptor

var file_quicklinks_v1_quicklinks_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x71, 0x75, 0x69, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x52, 0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x71,
	0x75, 0x69, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x66, 0x0a, 0x09, 0x53, 0x6c, 0x61, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xb3, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x75,
	0x74, 0x63, 0x68, 0x2e, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x6c, 0x61,
	0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69,
	0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x71, 0x75, 0x69, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x32, 0x9f, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x69, 0x63, 0x6b,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x41, 0x50, 0x49, 0x12, 0x8d, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x69, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x6c, 0x75,
	0x74, 0x63, 0x68, 0x2e, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x71, 0x75, 0x69, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x3a,
	0x01, 0x2a, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x02, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x79, 0x66, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x74,
	0x63, 0x68, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x71,
	0x75, 0x69, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x71, 0x75, 0x69,
	0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_quicklinks_v1_quicklinks_proto_rawDescOnce sync.Once
	file_quicklinks_v1_quicklinks_proto_rawDescData = file_quicklinks_v1_quicklinks_proto_rawDesc
)

func file_quicklinks_v1_quicklinks_proto_rawDescGZIP() []byte {
	file_quicklinks_v1_quicklinks_proto_rawDescOnce.Do(func() {
		file_quicklinks_v1_quicklinks_proto_rawDescData = protoimpl.X.CompressGZIP(file_quicklinks_v1_quicklinks_proto_rawDescData)
	})
	return file_quicklinks_v1_quicklinks_proto_rawDescData
}

var file_quicklinks_v1_quicklinks_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_quicklinks_v1_quicklinks_proto_goTypes = []interface{}{
	(*Link)(nil),                  // 0: clutch.quicklinks.v1.Link
	(*LinkEntity)(nil),            // 1: clutch.quicklinks.v1.LinkEntity
	(*SlackInfo)(nil),             // 2: clutch.quicklinks.v1.SlackInfo
	(*GetQuickLinksRequest)(nil),  // 3: clutch.quicklinks.v1.GetQuickLinksRequest
	(*GetQuickLinksResponse)(nil), // 4: clutch.quicklinks.v1.GetQuickLinksResponse
}
var file_quicklinks_v1_quicklinks_proto_depIdxs = []int32{
	0, // 0: clutch.quicklinks.v1.LinkEntity.links:type_name -> clutch.quicklinks.v1.Link
	2, // 1: clutch.quicklinks.v1.GetQuickLinksRequest.slack_info:type_name -> clutch.quicklinks.v1.SlackInfo
	1, // 2: clutch.quicklinks.v1.GetQuickLinksResponse.link_entities:type_name -> clutch.quicklinks.v1.LinkEntity
	3, // 3: clutch.quicklinks.v1.QuickLinksAPI.GetQuickLinks:input_type -> clutch.quicklinks.v1.GetQuickLinksRequest
	4, // 4: clutch.quicklinks.v1.QuickLinksAPI.GetQuickLinks:output_type -> clutch.quicklinks.v1.GetQuickLinksResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_quicklinks_v1_quicklinks_proto_init() }
func file_quicklinks_v1_quicklinks_proto_init() {
	if File_quicklinks_v1_quicklinks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_quicklinks_v1_quicklinks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicklinks_v1_quicklinks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicklinks_v1_quicklinks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlackInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicklinks_v1_quicklinks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuickLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicklinks_v1_quicklinks_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuickLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quicklinks_v1_quicklinks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quicklinks_v1_quicklinks_proto_goTypes,
		DependencyIndexes: file_quicklinks_v1_quicklinks_proto_depIdxs,
		MessageInfos:      file_quicklinks_v1_quicklinks_proto_msgTypes,
	}.Build()
	File_quicklinks_v1_quicklinks_proto = out.File
	file_quicklinks_v1_quicklinks_proto_rawDesc = nil
	file_quicklinks_v1_quicklinks_proto_goTypes = nil
	file_quicklinks_v1_quicklinks_proto_depIdxs = nil
}
